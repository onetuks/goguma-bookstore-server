name: Pull Request CI

# 언제 작성한 트리거 동작하는가
on:
  pull_request:
    types:
      - opened # PR 생성
      - synchronize # PR 브랜치에 새로운 커밋 푸시될 때
      - reopened # PR 재오픈

permissions: read-all

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Build Filter
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            application:
              - 'build.gradle'
              - 'src/**'

      - name: JDK Setup
        if: steps.changes.outputs.application == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
          cache: 'gradle'

      - name: application.yaml Creation
        if: steps.changes.outputs.application == 'true'
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YAML_CONTENT }}" > src/main/resources/application.yaml

      - name: Gradle Build
        if: steps.changes.outputs.application == 'true'
        run: |
          ./gradlew build --parallel spotlessApply

      - name: Coverage Report
        if: steps.changes.outputs.application == 'true'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Code Coverage Report
          update-comment: true
          min-coverage-overall: 10
          min-coverage-changed-files: 10
          paths: |
            ${{ github.workspace }}/**/build/jacoco/jacoco.xml

  style-test:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            application:
              - 'build.gradle'
              - 'src/**'

      - name: JDK 설치
        if: steps.changes.outputs.application == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
          cache: 'gradle'

      - name: Style Check
        if: steps.changes.outputs.application == 'true'
        run: |
          ./gradlew spotlessCheck
